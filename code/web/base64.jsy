const _b64_fromCharCode = String.fromCharCode
export function u8_to_base64(u8) ::
  let res=''
  const len = u8.byteLength
  for let i=0; i<len; i++ ::
    res += _b64_fromCharCode(u8[i])
  return btoa(res)

const _b64_charCodeAt = ''.charCodeAt
export function base64_to_u8(str_b64) ::
  const sz = atob @ str_b64.replace(/-/g, '+').replace(/_/g, '/')
  const len = sz.length
  const res = new Uint8Array(len)
  for let i=0; i<len; i++ ::
    res[i] = _b64_charCodeAt.call(sz, i)
  return res

